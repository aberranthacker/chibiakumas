Hours worked this week: 21
MSX: 12 hrs... Spectrum:6.5 hrs.... CPC 2.5 hrs
Uhhh what a week! well, the title screen port went well, with the title screen converted to Speccy and MSX in just two days
The 'reconfigure keys' function needed no changes at all! because it does its work through the core, and the core has already been converted, it worked fine with no changes!!
Most of the work was redrawing the sprites for the title and characters, and moving text and objects to accommodate the smaller MSX/Spectrum screen
A bigger problem was saving - Chibiakumas saves highscore, controls and unlocked achievements in a small binary file... and I had no idea how to do  save on MSX or Spectrum, so I had to learn!
MSX and Spectrum +3 disk were no real problem, the documentation was good, and I got it working quickly... the spectrum TAP is not getting a save option, so users of that will have to get used to setting their controls!
Spectrum TRD was a total pain... try as I might I couldn't get it to work, the problem with TRD is that it's primarily a russian format, so most of the documentation is russian, and I could not find a single code example of saving in the documentation I have, or online!
Well, I asked on the forum of SpectrumComputing.co.uk, and someone saved me with  a code sample... which also didn't work!
you read me right, it didn't work either, but that raised my suspicion, and I did some more research, it seems there was something wrong with the TRD rom my emulator was using, as it couldn't save anything, even from the built in DOS!
This is kind of the problem with the early days of programming these systems, I honestly don't know a lot about the spectrum - and now I'm trying to develop for it! going forward, I'll have my development environment sorted, and know all the pitfalls to avoid, but right now I'm still learning from my mistakes!
speaking of which, I spent saturday totally rewriting the background code for the MSX2 (non-V9990 version)... not because the old one didn't work but because some very clever user on MSX.ORG suggested a trick to speed up the game.
Let me explaing how MSX graphics work:
You have to ask the VPD (the graphics chip) to do something (say fill 1/3rd of the screen blue), and you cant ask it to do another thing while it's doing the first.
Chibiakumas is pretty graphics heavy, and on the CPC+SPECCY the CPU does all the graphics work, but on the MSX, the CPC is just waiting for the GPU all the time.
The trick is this... you can't tell the VDP to do another job, but you can access the memory and do things yourself
Unfortunately, on the VDP, you can't access the memory directly with LD (xxxx),yy commands... you have to do a bunch of OUT commands to specify the memory, then more OUTs to send the data... but the thing is before I was doing nothing but waiting, so even though it's not as fast as it could be, the CPU has nothing better to do!

Basically the background drawing routine now works like this on the MSX... The CPU tells the VDP to draw each chunk of the background, and when it's too busy, it goes to its 'alternate job' of filling some of the gradient background - when the VDP is ready again, it stops filling the gradient, and goes back to the main job of the background!
The result? the game is faster, the background is better! WIN-WIN!
I also rewrote the 'bullet' routines to use direct ram access... the summary is the MSX version looks as good as the CPC version now, and is even slightly faster!
I've also added early support for the the MSX-TurboR... for those who don't know, the Turbo-R is the last generation MSX, it has a Z80 compatible processor that gives up to 8x the performance of the Z80...
The internal VDP is too slow to really benefit, but i'm planning a supercharged version for the V9990 ... the MSX2+V9990 is about twice the speed of the normal game, the TurboR+V9990 is about 4x the normal playspeed... I plan to use all that extra power for enhanced paralax backgrounds, better bullets sprites, and maybe more! I need to slow the game down somehow, as it's crazy fast on the V9990 - so lets make the game look better!
I've been doing some work on the CPC title screen, I was a bit shocked how good the Spectrum screen ended up looking (from my childhood I always looked down on the Speccy graphics, but it's 7 onscreen colors can certainly give it the edge over the CPC in some situations), so I wanted to add the same 'gradient backgrounds' to the CPC version - I don't want the speccy users looking down on the CPC version!!!
Also fixed a bug in the new Plus colors routine, it uses a different interrupt  handler, and was causing the music to play super slow during the continue screen - it's a pain, adding a feature often breaks things elsewhere... I plan to get the game engine finished by new year, so I can get on with the rest of the levels!
This week, I want to try to finish getting the save routines in and tested, fix some graphical bugs in the MSX2 version, and maybe look at adding some new graphical FX to the V9990 version... I also want to try to get nice color fades on CPC+ and MSX at the start/end of the level
Oh, and it seems I now have THREE patreons! wow... I really wasn't sure that many people were really interested in my games... 
there have been a few really frustrating times this week where I've been stuck getting the code working, and it's really hard to keep working at it... so knowing there are some people out there willing to support me really means something to me. 
I'll be finishing work for the year in a week, so I'll have more time for Chibi Akumas development froim the 15th, so hopefully I can show you some results! I'm also going to try to do some videos, of the game, my development environment, and anything else I think will be interesting.
If people have requests for the direction they want my patreon posts to go, please let me know, this end of week post will always be a 'progress update', but let me know what else you want... if people want ASM programming tutorials that's something I'm happy to do... if you want background trivia about the game design and how I made the characters - that's what I'll do! if you want game play hints - then I'll do that instead!