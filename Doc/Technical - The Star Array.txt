Technical - the Star array - and 1 byte Move commands in chibi akumas

The 'star array' is the normal bullet routine that handles the players bullets, the enemy bullets - and also the particles on the Turbo-R version.

Each bullet has 1 byte 3 variables, a Y position, an X position and a Move

The data is byte aligned for a 256 byte array, so if the star array started at &0100, then bullet 3's Y co-ordinate would be &0102, it's X co-ordinate would be  &0202 and the move would be at  &0302.

A Y position of 0 means that star is not in use, so this is used to find empty slots for new stars, and decide which stars need drawing. The star array remembers how big the in use array is, and wont try to draw more than needed, to save a little time

Enemy bullets may hit the player, so when drawing the enemy bullets, the players location 'hit box' is pre-calculated and inserted into the conditions by 'self modifying code' to reduce the amount of time during the star loop - for the player loop this hit code is also disabled by self modifying code... 

player bullets hitting enemies is handled during the 'object drawing loop' which draws enemies and background objects.

'Moves' in Chibiakumas are a 1 byte command where each bit has a meaning 

0-------	normal move - Explained below
1-------	Special move - handled by various program code... these do everything from coins flying towards the player, super-slow moving backgrounds - and custom program code for boss animation

Normal moves:
-1------	Fast Move  - speed up object movement.
-0------	Normal Move 
--YYYXXX Move direction in Y and X axis 


This results in a grid of possible moves for any bullet or object which appears as below - note move 24 or 64 would be static, and would never move - and in the case of bullets - never leave the screen!

For example, 1C will move up the screen slowly, 7F will move towards the bottom right very fast. 18 will go fast to the right and up slowly!




;	Moves - Regular
;		0	1	2	3	4	5	6	7
;		-4	-3	-2	-1	0	1	2	3
;-4	0	00	01	02	03	 04	05	06	07
;-3	1	08	09	0A	0B	 0C	0D	0E	0F
;-2	2	10	11	12	13	 14	15	16	17
;-1	3	18	19	1A	1B	 1C	1D	1E	1F
 
;0	4	20	21	22	23	[24]	25	26	27

;1	5	28	29	2A	2B	 2C	2D	2E	2F
;2	6	30	31	32	33	 34	35	36	37
;3	7	38	39	3A	3B	 3C	3D	3E	3F
 

;	Moves - Fast
;		0	1	2	3	4	5	6	7
;		-4	-3	-2	-1	0	1	2	3
;-4	0	40	41	42	43	 44	45	46	47
;-3	1	48	49	4A	4B	 4C	4D	4E	4F
;-2	2	50	51	52	53	 54	55	56	57
;-1	3	58	59	5A	5B	 5C	5D	5E	5F
 
;0	4	60	61	62	63	[64]	65	66	67

;1	5	68	69	6A	6B	 6C	6D	6E	6F
;2	6	70	71	72	73	 74	75	76	77
;3	7	78	79	7A	7B	 7C	7D	7E	7F